#!/bin/sh -e

#============================================FUNCTIONS==============================================
usage()
{
  err_echo "$0 is a tool to prep files to put onto the mirror
-----------------------------------------------------------------------bch
USAGE: $0 -d DIRECTORY
  -d     # this is the directory that you plan on putting into the mirror
         # you can specify multiple directories by adding multiple -d and
         # in quotes eg -d "ONE TWO" -d THREE -d FOUR, will result in all
         # operations being applied to ONE, TWO, THREE, and FOUR
"
  err_echo $*
  exit 1
}

change_owner_to_star()
{
  chown -R star:wheel ${MIRROR_DIR}
}

check_for_broken_links()
{
  echo "Check... for broken links... and learn to fly again?"
  for item in $(find ${MIRROR_DIR}); do
    if (test -h ${item}); then 
      file ${item} | grep broken
    fi
  done
}

correct_the_permissions()
{
  echo "Correcting permissions"
  chmod -R u+rwX,go+rX,go-w ${MIRROR_DIR}
  find ${MIRROR_DIR} -type d -exec chmod 755 {} \;

  for FILE_TYPE_LIST in PLAIN_FILE_TYPES SCMAT_FILE_TYPES CAD_IMPORT_FILE_TYPES PARASOLID_FILE_TYPES; do
    for FILE_TYPE in ${!FILE_TYPE_LIST}; do
      find ${MIRROR_DIR} -name "${FILE_TYPE}" -exec chmod 755 {} \;
    done
  done
}

err_echo()
{
  echo "$@" 1>&2
}

summarize_status()
{
  echo "Summary... this will take a minute"
  find -type f -exec stat -c "%a %U %n" {} \; > ${SUMMARY_FILE}
  for FILE_TYPE_LIST in PLAIN_FILE_TYPES SCMAT_FILE_TYPES CAD_IMPORT_FILE_TYPES PARASOLID_FILE_TYPES; do
    echo "${FILE_TYPE_LIST}--------------------------"
    for FILE_TYPE in ${!FILE_TYPE_LIST}; do
      echo "${FILE_TYPE}: 755 : $(grep "${FILE_TYPE}" ${SUMMARY_FILE} | grep -c 755), 644 : $(grep "${FILE_TYPE}" ${SUMMARY_FILE} | grep -c 644), other $(grep "${FILE_TYPE}" ${SUMMARY_FILE} | grep -v ^755 | grep -v ^644)"
    done
  done
  for PERMS in "755 star" "644 star"; do 
    echo "PERMS \"${PERMS}\"---------------"
    echo "${PERMS} : $(grep -c "$PERMS" ${SUMMARY_FILE})"
  done
  echo "ALL OTHERS------------------"
  grep -v "755 star" ${SUMMARY_FILE} | grep -v "644 star" || true
}

verify_dependencies()
{	
  for REQUIRED_FILE in ${REQUIRED_FILES}; do
    if [ ! -f ${WORKSPACE}/${REQUIRED_FILE} ]; then
      usage "${0##*/} requires a missing file, ${REQUIRED_FILE}, to run,
Please add ${REQUIRED_FILE} to ${WORKSPACE} to continue"
    fi
  done
}

process_arguments()
{
  while [ $# -gt 0 ]; do
    case "$1" in
      -h|--help)
        usage
      ;;
      -d|-D)
        if [ -z "$2" ]; then
          usage "Improper number of arguments supplied for DIRECTORY flag (-d)"
        fi
        MIRROR_DIRS="$MIRROR_DIRS $2"
        shift
      ;;
    esac
    shift
  done
  if [ -z "$MIRROR_DIRS" ]; then
    usage "NO DIR specified"
  fi
  for MIRROR_DIR in ${MIRROR_DIRS}; do
    if [ ! -d "$MIRROR_DIR" ]; then
      usage "DIR $MIRROR_DIR doesn't exist"
    fi
  done

  REQUIRED_FILES=""
  if [ -n "${REQUIRED_FILES}" ]; then
    verify_dependencies 
  fi
}
#==========================================END FUNCTIONS============================================
if [ -z "${WORKSPACE}" ]; then
  WORKSPACE=$(pwd)
fi

DATE=$(date +%s)
MIRROR_DIRS=""
SUMMARY_FILE=/tmp/mirrorize_summary.${DATE}

PLAIN_FILE_TYPES='*.a *.bat *.dll *.exe *.gif *.html *.lib *.so *.so.*'
SCMAT_FILE_TYPES='RUN starcast.mat*'
CAD_IMPORT_FILE_TYPES='xttranslator_* mpirun*'
PARASOLID_FILE_TYPES='*.sch_txt'


if [ $# -lt 1 ]; then
  usage "No arguments specified"
fi

process_arguments "$@"

for MIRROR_DIR in ${MIRROR_DIRS}; do
  echo "${MIRROR_DIR}"
  echo "-------------------------------------"
  check_for_broken_links
  change_owner_to_star
  correct_the_permissions
  summarize_status
done

echo "Switch user to star and rsync"

for MIRROR_DIR in ${MIRROR_DIRS}; do
  echo "su star -c \"rsync -Hav --progress --numeric-ids ${MIRROR_DIR}/ /home/star/mirror/${MIRROR_DIR#/*/}\""
  echo "ssh root@devsrv03 \"ssh star@statecollegesrv.statecollege.cd-adapco.com \\\"ls /starmirror/mirror/${MIRROR_DIR#/*/}; exit\\\"\""
done

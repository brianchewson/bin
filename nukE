#!/bin/bash 
GIT_REPO=$1
CURRENT_DIR=$(pwd)
TYPE=""
#============================================FUNCTIONS==============================================
usage()
{
  err_echo "$0 is a tool to destroy a git workspace and any complications therein and reclone
-----------------------------------------------------------------------bch
USAGE: $0  GIT_REPO 
  GIT_REPO   #this should be a local working copy (clone) of a git/gitfat repo
"
  echo $*

  exit 1

}

err_echo()
{
  echo "$@" 1>&2
}

get_git_url()
{
  if [ -f ${GIT_REPO}/.git/config ]; then
    GIT_URL=$(grep -m 1 url ${GIT_REPO}/.git/config)   
    GIT_URL=${GIT_URL#*=}
  fi

  if [ -z "${GIT_URL}" ]; then
    usage "No url for git repo found at ${GIT_REPO}/.git/config"
  fi
}

is_git_repo()
{
  if [ ! -d ${GIT_REPO} ]; then
    usage "No directory exists at ${GIT_REPO}"
  fi
  if [ ! -d ${GIT_REPO}/.git ]; then
    usage "${GIT_REPO} is not a git repository"
  fi
  TYPE=GIT
}

is_git_fat_repo()
{
  if [ -f  ${GIT_REPO}/.gitfat ]; then
    TYPE=FAT
  fi
}

nuke_repo()
{
  rm -rf ${GIT_REPO}
}

remake_repo()
{
  git clone ${GIT_URL}
  cd ${GIT_REPO}
  if [ "$TYPE" = "FAT" ]; then
    git fat init
  fi
  git pull
  git status
  cd ${CURRENT_DIR}
}
#==========================================END=FUNCTIONS============================================
REPO_NAME=${GIT_REPO%/}
GIT_REPO="${CURRENT_DIR}/${REPO_NAME}"
is_git_repo
get_git_url
is_git_fat_repo
nuke_repo
remake_repo

# this is a security requirement
if [ "${REPO_NAME}" = "star" ]; then
  cd ${CURRENT_DIR}
  chmod 750 ${REPO_NAME}
fi
